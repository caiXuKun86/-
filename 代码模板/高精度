预处理
string sa,sb;
int main(){
    cin>>sa>>sb;
    if(cmp(sa,sb)) cout<<'-';
    for(int i=sa.size()-1;~i;i--)a.push_back(sa[i]-'0');
    for(int i=sb.size()-1;~i;i--)b.push_back(sb[i]-'0');
    vector<int>c=sub(a,b);
    for(int i=c.size()-1;~i;i--){
        cout<<c[i];
    }

}
加法
vector<int> add(vector<int>&a,vector<int>&b){
    if(a.size()<b.size()) return add(b,a);
    vector<int>c;
    int t=0;
    for(int i=0;i<a.size();i++){
        t+=a[i];
        if(i<b.size()) t+=b[i];
        c.push_back(t%10);
        t/=10;
    }
    if(t) c.push_back(t);
    return c;
}
减法比较
bool cmp(string &a,string &b){
    if(a.size()<b.size()){
        swap(a,b);
        return true;
    } else if(a.size()==b.size()){
        for(int i=0;i<a.size();i++){
            if(a[i]<b[i]){
                swap(a,b);
                return true;
            }
        }
        return false;
    } else{
        return false;
    }

}
减法
vector<int> sub(vector<int>&a,vector<int>&b){
    vector<int>c;
    int t=0;
    for(int i=0;i<a.size();i++){
        t=a[i]-t;
        if(i<b.size()) t-=b[i];
        c.push_back((t+10)%10);
        if(t<0) t=1;
        else t=0;
    }
    while(c.size()>1&&c.back()==0) c.pop_back();
    return c;
}
高精乘高精
vector<int> mul(vector<int>&a,vector<int>&b){
    vector<int>c(a.size()+b.size());
    for(int i=0;i<a.size();i++){
        for(int j=0;j<b.size();j++){
            c[i+j]+=a[i]*b[j];
            c[i+j+1]+=c[i+j]/10;
            c[i+j]%=10;
        }
    }
    while(c.size()>1&&!c.back()) c.pop_back();
    return c;
}
高精乘低精
vector<int> mul(vector<int> &A, int b)
{
    vector<int> C;

    int t = 0;
    for (int i = 0; i < A.size() || t; i ++ )
    {
        if (i < A.size()) t += A[i] * b;
        C.push_back(t % 10);
        t /= 10;
    }

    while (C.size() > 1 && C.back() == 0) C.pop_back();

    return C;
}
高精度除以低精度
vector<int> div(vector<int> &A, int b, int &r)
{
    vector<int> C;
    r = 0;
    for (int i = A.size() - 1; i >= 0; i -- )
    {
        r = r * 10 + A[i];
        C.push_back(r / b);
        r %= b;
    }
    reverse(C.begin(), C.end());
    while (C.size() > 1 && C.back() == 0) C.pop_back();
    return C;
}

作者：acwing_98726
链接：https://www.acwing.com/blog/content/73538/
来源：AcWing
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
