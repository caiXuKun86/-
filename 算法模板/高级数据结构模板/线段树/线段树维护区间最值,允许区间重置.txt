```c++
#include<iostream>
using namespace std;
#define ll long long
int n,q;
ll a[100005];

ll maxx[400005]={0};

int change[400005];

int update[400005];

void up(int i){
	maxx[i]=max(maxx[i<<1]+maxx[i<<1|1]);
}
void lazy(int i,int v){
	maxx[i]=v;
	change[i]=v;
	update[i]=true;
}

void down(int i){
	if(updata[i]){
		lazy(i<<1,change[i]);
		lazy(i<<1|1,change[i]);
		update[i]=false;
	}
}
void build(int l,int r,int i){
	if(l==r){
		maxx[i]=a[l];
		return;
	} else{
		int m=(l+r)>>1;
		build(l,m,i<<1);
		build(m+1,r,i<<1|1);
		up(i);	
	}
	change[i]=0;
	update[i]=false;
	
}

ll query(int tl,int tr,int l,int r,int i){
	if(l>=tl&&r<=tr){
		return maxx[i];
	}
	int m=(l+r)>>1;
	down(i,m-l+1,r-m);
	ll ans=-1e18;
	if(tl<=m){
		ans=max(ans,query(tl,tr,l,m,i<<1));
	}
	if(tr>m){
		ans=max(ans,query(tl,tr,m+1,r,i<<1|1));
	}
	return ans;
}
void upd(int tl,int tr,int v,int l,int r,int i){
	if(tl<=l&&r<= tr){
		lazy(i,v);
	} else{
		int m=(l+r)>>1;
		down(i);
		if(tl<=m){
			upd(tl,tr,v,l,m,i<<1);
		}
		if(tr>m){
			upd(tl,tr,v,m+1,r,i<<1|1);
		}
		up(i);
	}
}
```

