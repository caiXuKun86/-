```java


class TreeNode {
    char val;
    TreeNode left;
    TreeNode right;

    public TreeNode() {
    }

    public TreeNode(char val) {
        this.val = val;

    }
}

public class Text {
    public static TreeNode[] q = new TreeNode[1000];
    public static int l, r;

    //序列化
    public static String f1(TreeNode root) {
        l = r = 0;
        StringBuilder sb = new StringBuilder();
        if (root == null||root.val=='#') return sb.toString();
        q[r++] = root;
        sb.append(root.val);
        while (l < r) {
            TreeNode s = q[l++];
            if (s.left != null) {
                q[r++] = s.left;
                sb.append(s.left.val);
            } else {
                sb.append("#");
            }
            if (s.right != null) {
                q[r++] = s.right;
                sb.append(s.right.val);
            } else {
                sb.append("#");
            }
        }
        return sb.toString();
    }
    //反序列化
    public static int count=0;
    public static TreeNode f2(String s){
        l=r=0;
        if(s.isEmpty())return null;
        TreeNode root=new TreeNode(s.charAt(count));
        q[r++]=root;
        while (l<r&&count<s.length()-1){
            TreeNode node=q[l++];
            char ch=s.charAt(++count);
            if(ch!='#'){
                node.left=new TreeNode(ch);
                q[r++]=node.left;
            }else {
                node.left=null;
            }
            ch=s.charAt(++count);
            if(ch!='#'){
                node.right=new TreeNode(ch);
                q[r++]=node.right;
            }else {
                node.right=null;
            }
        }
        return root;

    }

    public static void main(String[] args) {
        String s="#";
        TreeNode root=f2(s);
        System.out.println(f1(root));

    }
}
```

