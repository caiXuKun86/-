#include<iostream>
using namespace std;
#include<string>
#include<algorithm>
typedef __int128 ll;

int p[]={2,3,5,7,11,13,17,19,23,29,31,37};

ll power(ll n,ll p,ll mod){
	ll ans=1;
	while(p>0){
		if((p&1)==1){
			ans=(ans*n)%mod;
		}
		n=(n*n)%mod;
		p>>=1;
	}
	return ans;
}
bool witness(ll a,ll n){
	ll u=n-1;
	int t=0;
	while((u&1)==0){
		t++;
		u>>=1;
	}
	ll x1=power(a,u,n),x2;
	for(int i=1;i<=t;i++){
		x2=power(x1,2,n);
		if(x2==1&&x1!=1&&x1!=n-1){
			return true;
		}
		x1=x2;
	}
	if(x1!=1){
		return true;
	}
	return false;
	
}
bool millerRabin(ll n){
	if(n<=2){
		return n==2;
	}
	if((n&1)==0){
		return false;
	}
	for(int i=0;i<12&&p[i]<n;i++){
		if(witness(p[i],n)){
			return false;
		}
	}
	return true;
	
}
int main()
{
	int N;
	scanf("%d",&N);
	ll n;
	for(int i=0;i<N;i++){
		scanf("%lld",&n);
		bool flag=millerRabin(n);
		if(flag){
			cout<<"Yes"<<endl;
		}
		else cout<<"No"<<endl;
	}
}