

高精度加法

```cpp

string s1,s2;
int a[505],b[505];
int c[505];
int main(){
	cin>>s1>>s2;
	int la=s1.size();
	int lb=s2.size();
	
	for(int i=0;i<la;i++){
		a[la-i-1]=s1[i]-'0';
	}
	for(int i=0;i<lb;i++){
		b[lb-i-1]=s2[i]-'0';
	}
	int lc=max(la,lb)+1;
	for(int i=0;i<lc;i++){
		c[i]=a[i]+b[i];
	}
	for(int i=0;i<lc;i++){
		if(c[i]>9){
			c[i+1]+=c[i]/10;
			c[i]%=10;
		}
	}
	int len;
	for(len=lc;len>0&&c[len]==0;len--);
	for(int i=len;i>=0;i--){
		cout<<c[i];
	}
	return 0;
}


```

高精度减法
string s1,s2;
int a[10090];
int b[10090];
int c[10090];
bool flag=0;
void f(string& s1,string& s2){
	if(s1.size()>s2.size()){
		return;
	} else if(s1.size()<s2.size()){
		flag++;
		string temp=s1;
		s1=s2;
		s2=temp;
	} else{
		for(int i=0;i<s1.size();i++){
			if(s1[i]<s2[i]){
				flag++;
				string temp=s1;
		        s1=s2;
				s2=temp;
				return;
			}
		}
	}
}
int main(){
	cin>>s1>>s2;
	if(!s1.compare(s2)){
		cout<<0<<endl;
		return 0;
	}
	f(s1,s2);
	

	int la=s1.size();
	int lb=s2.size();
	int lc=max(la,lb);
	for(int i=0;i<la;i++){
		a[la-i-1]=s1[i]-'0';
	}
	for(int i=0;i<lb;i++){
		b[lb-i-1]=s2[i]-'0';
	}
	for(int i=0;i<lc;i++){
		c[i]=a[i]-b[i];
	}
	for(int i=0;i<lc;i++){
		if(c[i]<0){
			c[i+1]--;
			c[i]+=10;
		}
	}
	while(c[lc-1]==0&&lc>0){
		lc--;
	}
	if(flag)cout<<'-';
	for(int i=lc-1;i>=0;i--){
		cout<<c[i];
	}
	return 0;
	}
高精度乘法

#include<iostream>
using namespace std;
#include<cstring>

string s1, s2;
int a[2005];
int b[2005];
int c[4000];
int main(){
	cin>>s1>>s2;
	if(!s1.compare("0")||!s2.compare("0")){
		cout<<0<<endl;
		return 0;
	}
	int la=s1.size();
	int lb=s2.size();
	int lc=la+lb;
	for(int i=0;i<la;i++){
		a[la-i-1]=s1[i]-'0';
	}
	for(int i=0;i<lb;i++){
		b[lb-i-1]=s2[i]-'0';
	}

	for(int i=0;i<la;i++){
		for(int j=0;j<lb;j++){
			c[i+j]+=a[i]*b[j];
		}
	}
	
	for(int i=0;i<lc;i++){
		if(c[i]>9){
			c[i+1]+=c[i]/10;
			c[i]%=10;
		}
	}
	int len;
	for(len=lc;c[len]==0&&len>0;len--);


	for(int i=len;i>=0;i--){
		cout<<c[i];
	}
	return 0;
}