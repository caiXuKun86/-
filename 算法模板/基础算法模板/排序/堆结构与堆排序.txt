#include<iostream>
using namespace std;
const int MAX_SIZE=100;
int heap[MAX_SIZE];
int size;
//向下调整 
void heapify(int i){
	int l=i*2+1;
	while(l<size){
	    int best=(l+1<size&&heap[l]<heap[l+1])?l+1:l;
	    best=(heap[i]>heap[best])?i:best;
	    if(best==i) return;
	    else{
		    swap(heap[i],heap[best]);
		    i=best;
		    l=i*2+1;
	    }
	}
	
}
//向上调整 
void heappop(int i){
	while(heap[i]>heap[(i-1)/2]){
		swap(heap[i],heap[(i-1)/2]);
		i=(i-1)/2;
	}
}

void add(int x){
	heap[size++]=x;
	heappop(size-1);
}

int top(){
	return heap[0];
}

void pop(){
	swap(heap[0],heap[size-1]);
	size--;
	heapify(0);
}
int main(){
	int arr[]={2,6,7,9,5,2,1,4,3};
	int n=9;
	for(int i:arr){
		add(i);
	}
	
	while(size>0){
		pop();
	}
	for(int i=0;i<n;i++){
		cout<<heap[i]<<endl;
	}

	
	

	
}