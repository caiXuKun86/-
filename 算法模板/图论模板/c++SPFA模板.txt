#include<iostream>
using namespace std;
#include<queue>
#include<vector>
#include<cstring>
const int N=2005;
const int M=3005;
int T=1;
int n,m;
int dist[N];
int vis[N];
int count[N];
queue<int>q;
vector<vector<pair<int,int> > >g(N);

bool f(){
	memset(dist,0x3f,sizeof dist);
	memset(vis,0,sizeof vis);
	memset(count,0,sizeof count);
	while(!q.empty())q.pop();
	dist[1]=0;
	count[1]++;
	vis[1]=1;
	q.push(1);
	while(!q.empty()){
		int u=q.front();
		q.pop();
		vis[u]=0;
		for(auto i:g[u]){
			int v=i.first;
			int w=i.second;
			if(dist[u]+w<dist[v]){
				dist[v]=dist[u]+w;
				if(!vis[v]){
					if(count[v]++ ==n)return true;
					q.push(v);
					vis[v]=1;
				}
			}
		}
	}
	return false;
}
int main(){
	cin>>T;
	while(T--){
		
		for(auto& i:g){
			i.clear();
		}
		
		cin>>n>>m;
		for(int i=0,u,v,w;i<m;i++){
			cin>>u>>v>>w;
			if(w>=0){
				g[u].push_back({v,w});
				g[v].push_back({u,w});
			}
			else{
				g[u].push_back({v,w});
			}
		}
		if(f())cout<<"YES"<<endl;
		else cout<<"NO"<<endl;
	}
	
}
/*
8 14
1 2 5
1 7 -3
2 3 8
2 4 0
2 5 14
2 2 15
2 6 13
3 7 5
4 5 1
4 6 13
4 7 11
4 8 15
4 7 15
4 6 -2
*/
